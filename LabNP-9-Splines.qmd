---
title: "Lab8: Regresión no paramétrica 3"
subtitle: "Splines"
lang: es
author: "Jorge de la Vega"
date: today
format:
  html:
    page-layout: full
    embed-resources: true
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
library(rgl)
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
knitr::knit_hooks$set(webgl = hook_webgl)
```

## Splines de interpolación


### Ejemplo 1

```{r}
par(mfrow= c (1,2))
x <- c(10, 40, 40, 20, 60, 50, 25, 16, 30, 60, 80, 75, 65, 100)
y <- c(85, 95, 65, 55, 100, 70, 35, 10, 10, 36, 60, 65, 55, 50)
plot(x,y)
u <- 1:length(x)
uu <- seq(1, length(u), length = 250)

# funciones para ajustar splines interpolantes: splinefun
fit1 <- splinefun(u,x) 
xx <- fit1(uu)
fit2 <- splinefun(u,y) 
yy <- fit2(uu)
plot(x, y, axes = F, xlab = "", ylab = "", ylim = c(0, 100), xlim = c(0, 100))
lines(xx, yy, type = "l")
```


### Ejemplo 2

```{r}
par(mfrow=c(1,1))
x <- 4*pi*c(0, 1, runif(20))
y <- sin(x)
fit <- splinefun(x,y)
xx <- seq(0, max(x), length = 100) # nodos para ajuste
yy <- fit(xx)
plot(x, y)
lines(xx, yy, lwd=3, col="red")
```



## Splines de suavizamiento. Ejemplo: datos de S&P

Los siguientes datos corresponden al índice S&P

```{r}
library(quantmod)
getSymbols("^GSPC")
plot(GSPC$GSPC.Close, type = "p", pch = 16, cex = 0.5)
y <- as.vector(GSPC$GSPC.Close)
x <- 1:length(y)
plot(x, y, pch = 16, cex = 0.5)
```

Los splines se pueden ajustar con la función `smooth.spline` (paquete `stats`) o la función `ss` (pquete `npreg`)

```{r}
library(npreg)
(m0 <- smooth.spline(x, y, nknots = 10))
(m1 <- ss(x, y, nknots = 10))

# raíz del error cuadrático medio
(rmse0 <- sqrt(mean((y - m0$y)^2)))
(rmse1 <- sqrt(mean((y - m1$y)^2)))
```

El ajuste se puede ver: 

```{r}
plot(x, y, pch = 16, cex = 0.3)
lines(x,m0$y, lty = 2, col = "red", lwd = 2)
lines(x,m1$y, lty = 2, col = "blue", lwd = 2)

# Se puede graficar m1
plot(m1)
plot(m1,xlim = c(3200,3400), ylim = c(2800,3500)) # zoom para ver que si se calcula ic.
a <- boot(m1, R = 4) # calcula intervalos basados en bootstrap (muy lento)
plot(a)
```

Resumen de información: 

```{r}
summary(m1)  # m0 no tiene método summary
pred <- predict(m1,x = 4100:4200)
plot(c(x,pred$x),c(y,pred$y), pch = 16, cex = 0.4)
lines(pred$x, pred$y-2*pred$se, col = "red")
lines(pred$x, pred$y+2*pred$se, col = "red")
```

Se puede especificar el grado del spline a utilizar con el parámetro `m`:

- `m=1` spline lineal
- `m=2` spline cúbico (default)
- `m=3` spline quíntico

```{r}
par(mfrow = c(1,3))
plot(ss(x, y, nknots = 10, m = 1), xlim = c(0,1000), ylim = c(1000,1700))
plot(ss(x, y, nknots = 10, m = 2), xlim = c(0,1000), ylim = c(1000,1700))
plot(ss(x, y, nknots = 10, m = 3), xlim = c(0,1000), ylim = c(1000,1700))
```


